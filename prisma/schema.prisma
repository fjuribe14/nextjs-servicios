// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id     String  @id @default(cuid())
  bio    String?
  userId String  @unique
  User   User    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id      String   @id @default(cuid())
  name    String?  @db.VarChar(255)
  email   String   @unique @db.VarChar(255)
  Profile Profile?
}

// models/Client.prisma
model Client {
  id            String          @id @default(cuid())
  name          String
  email         String          @unique
  phone         String
  address       String
  orders        Order[]
  Product       Product[]
  PaymentMethod PaymentMethod[]
}

// models/Product.prisma
model Product {
  id          String  @id @default(cuid())
  name        String
  description String
  price       Decimal
  stock       Int
  images      Image[]
  client      Client  @relation(fields: [clientId], references: [id])
  clientId    String

  OrderProduct OrderProduct[]
}

// models/Image.prisma
model Image {
  id        String  @id @default(cuid())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

// models/Order.prisma
model Order {
  id       String         @id @default(cuid())
  client   Client         @relation(fields: [clientId], references: [id])
  clientId String
  date     DateTime       @default(now())
  total    Decimal
  status   String         @default("pending")
  products OrderProduct[]
  Payment  Payment[]
  Invoice  Invoice[]
}

// models/OrderProduct.prisma
model OrderProduct {
  id        String  @id @default(cuid())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
}

// models/PaymentMethod.prisma
model PaymentMethod {
  id          String    @id @default(cuid())
  name        String
  description String
  client      Client    @relation(fields: [clientId], references: [id])
  clientId    String
  Payment     Payment[]
}

// models/Payment.prisma
model Payment {
  id              String        @id @default(cuid())
  order           Order         @relation(fields: [orderId], references: [id])
  orderId         String
  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id])
  paymentMethodId String
  date            DateTime      @default(now())
  amount          Decimal
}

// models/Invoice.prisma
model Invoice {
  id      String   @id @default(cuid())
  order   Order    @relation(fields: [orderId], references: [id])
  orderId String
  date    DateTime @default(now())
  total   Decimal
  status  String   @default("pending")
}
